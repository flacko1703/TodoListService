// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TodoListProj.Infrastructure.EF.Contexts;

#nullable disable

namespace TodoListProj.Infrastructure.EF.Migrations
{
    [DbContext(typeof(TodoListDbContext))]
    [Migration("20231210223513_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.Entities.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<bool?>("IsDone")
                        .HasColumnType("boolean")
                        .HasColumnOrder(4);

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<Guid>("TodoListId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<Guid?>("NoteId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.TodoList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Created")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Updated")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.Entities.Note", b =>
                {
                    b.HasOne("TodoListProj.Domain.Aggregates.TodoListAggregate.TodoList", null)
                        .WithMany("Notes")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.Entities.Tag", b =>
                {
                    b.HasOne("TodoListProj.Domain.Aggregates.TodoListAggregate.Entities.Note", null)
                        .WithMany("Tags")
                        .HasForeignKey("NoteId");
                });

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.Entities.Note", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("TodoListProj.Domain.Aggregates.TodoListAggregate.TodoList", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
